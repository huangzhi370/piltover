server.port=9092

logging.level.org.springframework=DEBUG


#Mysql database
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://106.13.116.121:3306/report?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=Qwe421421*
# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size=1
# 最大连接池数量
spring.datasource.druid.max-active=10
# 最小连接池数量
spring.datasource.druid.min-idle=1
# 获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=180000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=3600000
# 连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis=3600000
# 用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=0
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计
spring.datasource.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
# druid连接池监控
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=123
# 排除一些静态资源，以提高效率
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*


#mybatis
mybatis.mapper-locations: classpath:mapper/*.xml
#下划线转驼峰
mybatis.configuration.map-underscore-to-camel-case=true

spring.mvc.servlet.load-on-startup=1

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=106.13.116.121
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=qwe421421
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000
spring.redis.pool.maxTotal=100
spring.redis.pool.maxIdle=10
spring.redis.pool.maxWaitMillis=30000
spring.redis.timeBetweenEvictionRunsMillis=30000
spring.redis.numTestsPerEvictionRun=1024
spring.redis.minEvictableIdleTimeMillis=30000
spring.redis.testOnBorrow: true
spring.redis.testWhileIdle: true
spring.redis.testOnReturn: true  

 #Nacos discovery
spring.application.name=piltover-report
spring.cloud.nacos.discovery.server-addr=106.13.116.121:80
spring.cloud.nacos.discovery.username=nacos
spring.cloud.nacos.discovery.password=nacos
spring.cloud.nacos.discovery.namespace=2729d407-b06c-42a4-957e-2417c6e8a6ba

#自定义事务组名称需要与seata-server中的对应
spring.cloud.alibaba.seata.tx-service-group=fsp_tx_group


#全局配置
# 请求连接的超时时间 默认的时间为 1 秒
ribbon.ConnectTimeout=50000
# 请求处理的超时时间
ribbon.ReadTimeout=50000